> Problem: [18. 四数之和](https://leetcode.cn/problems/4sum/description/)

[TOC]

# 思路

> 排序再取值

# 复杂度

- 时间复杂度:

> 添加时间复杂度, 示例： $O(n)$

- 空间复杂度:

> 添加空间复杂度, 示例： $O(n)$

# Code

* []

```Java

class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        if(nums == null || nums.length <4){
            return res;
        }
        int n = nums.length;
        Arrays.sort(nums); // 排序更便于查找
        for (int i = 0; i < n-3; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) continue; // 已经遍历过的值直接跳过,防止重复
            if ((long)nums[i] + nums[i + 1] + nums[i + 2] + nums[i + 3] > target) {  // 由于是按从小到大排序
                break;
            }
            if ((long)nums[i] + nums[n - 1] + nums[n - 2] + nums[n - 3] < target) {
                continue;
            }
            for (int j = i+1; j < n-2; j++) {
                if (j > i+1 && nums[j] == nums[j - 1]) continue; // 已经遍历过的值直接跳过,防止重复
                if ((long)nums[i] + nums[j] + nums[j + 1] + nums[j + 2] > target) {  // 由于是按从小到大排序
                    break;
                }
                if ((long)nums[i] + nums[j] + nums[n - 1] + nums[n- 2] < target) {
                    continue;
                }
                int left = j+1, right = n-1;
                while(left < right){
                    long sum =(long) nums[i] +nums[j] + nums[left] + nums[right];
                    if(sum == target){
                        res.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));
                        while(left < right && nums[left] == nums[left+1]){
                            left++;
                        }
                        left++;
                        while(left < right && nums[right] == nums[right-1]){
                            right--;
                        }
                        right--;
                    }else if(sum < target){
                        left++;
                    }else{
                        right--;
                    }
                }
            }
        }
        return res;
    }
}
```

